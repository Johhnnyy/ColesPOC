# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'clean test -Dbuild=${BUILD_NUMBER}'

jobs:
- job: always
  steps:
  - script: echo "The build has finished. Please see reports here:- https://uscloud.experitest.com/reporter/#/test-view-view/1055"
    condition: always()

- job: success
  steps:
  - script: echo "The build has finished. Please see reports here:- https://uscloud.experitest.com/reporter/#/test-view-view/1055"
    condition: succeeded()

- job: failed
  steps:
  - script: echo "The build has finished. Please see reports here:- https://uscloud.experitest.com/reporter/#/test-view-view/1055"
    condition: failed()